name: 'snowplow_normalize_integration_tests'
version: '0.4.1'
config-version: 2

profile: 'integration_tests'

dispatch:
  - macro_namespace: dbt
    search_order: ['snowplow_utils', 'dbt']

model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"
clean-targets:
    - "target"
    - "dbt_modules"
    - "dbt_packages"

quoting:
  identifier: false
  schema: false
  database: "{{ true if target.type in ['bigquery','databricks'] else false }}"



vars:
  snowplow__license_accepted: true
  
  snowplow_normalize:
    snowplow__events: "{{ ref('snowplow_normalize_stg') }}"
    snowplow__start_date: "2022-10-01"
    snowplow__backfill_limit_days: 2
    snowplow__derived_tstamp_partitioned: false
    snowplow__atomic_schema: "{{ target.schema ~ 'sp_normalize_int_test' }}"
  snowplow__partition_tstamp: "load_tstamp"

models:
  snowplow_normalize_integration_tests:
    +materialized: table
    bind: false
    +schema: "sp_normalize_int_test"
    dummy_model:
      bigquery:
        +enabled: "{{ target.type == 'bigquery' | as_bool() }}"
      databricks:
        +enabled: "{{ target.type == 'databricks' | as_bool() }}"
      snowflake:
        +enabled: "{{ target.type == 'snowflake' | as_bool() }}"
      spark:
        +enabled: "{{ target.type == 'spark' | as_bool() }}"

seeds:
  quote_columns: false
  snowplow_normalize_integration_tests:
    +schema: "int_data"
    source:
      snowplow_norm_dummy_events:
        +column_types:
          event_name: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          event_id: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          app_id:  "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          collector_tstamp: timestamp
          dvce_sent_tstamp: timestamp
          dvce_created_tstamp: timestamp
          unstruct_event_test_1_0_0: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          unstruct_event_test_1_0_1: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          unstruct_event_test2_1_0_0: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          unstruct_event_test2_1_0_1: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test_1_0_0: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test2_1_0_0: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test2_1_0_1: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test2_1_0_2: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test2_1_0_3: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test2_1_0_4: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test2_1_0_5: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
          contexts_test4_1: "{{ 'string' if target.type in ['bigquery', 'databricks', 'spark'] else 'varchar' }}"
